// Mocks generated by Mockito 5.4.4 from annotations
// in dini_atlas/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i10;

import 'package:dini_atlas/models/favourite.dart' as _i32;
import 'package:dini_atlas/models/kaza/kaza.dart' as _i35;
import 'package:dini_atlas/models/location_api/city.dart' as _i15;
import 'package:dini_atlas/models/location_api/country.dart' as _i14;
import 'package:dini_atlas/models/location_api/state.dart' as _i16;
import 'package:dini_atlas/models/prayer/prayer_time.dart' as _i24;
import 'package:dini_atlas/models/prayer/prayer_times.dart' as _i21;
import 'package:dini_atlas/models/quran/ayah_list.dart' as _i27;
import 'package:dini_atlas/models/quran/quran_reciter.dart' as _i28;
import 'package:dini_atlas/models/quran/sura_audio.dart' as _i29;
import 'package:dini_atlas/models/quran/sura_info.dart' as _i26;
import 'package:dini_atlas/models/quran/sura_player.dart' as _i30;
import 'package:dini_atlas/models/religious_days.dart' as _i22;
import 'package:dini_atlas/models/rosary_setting.dart' as _i4;
import 'package:dini_atlas/models/story_model.dart' as _i5;
import 'package:dini_atlas/models/user_location.dart' as _i13;
import 'package:dini_atlas/models/user_setting.dart' as _i3;
import 'package:dini_atlas/services/local/favorites_service.dart' as _i31;
import 'package:dini_atlas/services/local/isar_service.dart' as _i11;
import 'package:dini_atlas/services/local/prayer_times_service.dart' as _i23;
import 'package:dini_atlas/services/local/user_settings_service.dart' as _i12;
import 'package:dini_atlas/services/remote/auth_service.dart' as _i33;
import 'package:dini_atlas/services/remote/dio_service.dart' as _i17;
import 'package:dini_atlas/services/remote/fetch_times_service.dart' as _i19;
import 'package:dini_atlas/services/remote/google/in_app_purchase_service.dart'
    as _i36;
import 'package:dini_atlas/services/remote/kaza_service.dart' as _i34;
import 'package:dini_atlas/services/remote/quran_service.dart' as _i25;
import 'package:dini_atlas/services/remote/story_service.dart' as _i38;
import 'package:dio/dio.dart' as _i18;
import 'package:flutter/material.dart' as _i8;
import 'package:fpdart/fpdart.dart' as _i20;
import 'package:isar/isar.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:purchases_flutter/purchases_flutter.dart' as _i37;
import 'package:stacked_services/stacked_services.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIsar_0 extends _i1.SmartFake implements _i2.Isar {
  _FakeIsar_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserSettings_1 extends _i1.SmartFake implements _i3.UserSettings {
  _FakeUserSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePrayerNotiSettings_2 extends _i1.SmartFake
    implements _i3.PrayerNotiSettings {
  _FakePrayerNotiSettings_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRosarySetting_3 extends _i1.SmartFake implements _i4.RosarySetting {
  _FakeRosarySetting_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStories_4 extends _i1.SmartFake implements _i5.Stories {
  _FakeStories_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i6.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i7.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i8.GlobalKey<_i8.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i8.GlobalKey<_i8.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i6.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<T?>? navigateWithTransition<T>(
    _i8.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i8.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i6.Transition? transitionClass,
    _i6.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? replaceWithTransition<T>(
    _i8.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i8.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i6.Transition? transitionClass,
    _i6.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i8.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i8.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? navigateToView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i8.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i6.Transition? transition,
    _i6.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i8.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearStackAndShowView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? clearTillFirstAndShowView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);

  @override
  _i9.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i8.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i9.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i6.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i6.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i6.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i9.Future<_i6.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i6.SheetResponse<dynamic>?>.value(),
      ) as _i9.Future<_i6.SheetResponse<dynamic>?>);

  @override
  _i9.Future<_i6.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i10.Color? barrierColor = const _i10.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i9.Future<_i6.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i9.Future<_i6.SheetResponse<T>?>.value(),
      ) as _i9.Future<_i6.SheetResponse<T>?>);

  @override
  void completeSheet(_i6.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i6.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i6.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i8.Widget Function(
      _i8.BuildContext,
      _i6.DialogRequest<dynamic>,
      dynamic Function(_i6.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i6.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i10.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i10.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i6.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
      ) as _i9.Future<_i6.DialogResponse<dynamic>?>);

  @override
  _i9.Future<_i6.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i10.Color? barrierColor = const _i10.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i9.Future<_i6.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i9.Future<_i6.DialogResponse<T>?>.value(),
      ) as _i9.Future<_i6.DialogResponse<T>?>);

  @override
  _i9.Future<_i6.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i10.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i10.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i6.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i6.DialogResponse<dynamic>?>.value(),
      ) as _i9.Future<_i6.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i6.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IsarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsarService extends _i1.Mock implements _i11.IsarService {
  @override
  _i2.Isar get isar => (super.noSuchMethod(
        Invocation.getter(#isar),
        returnValue: _FakeIsar_0(
          this,
          Invocation.getter(#isar),
        ),
        returnValueForMissingStub: _FakeIsar_0(
          this,
          Invocation.getter(#isar),
        ),
      ) as _i2.Isar);

  @override
  set isar(_i2.Isar? _isar) => super.noSuchMethod(
        Invocation.setter(
          #isar,
          _isar,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> createDefaultPrayerNotiSettings() => (super.noSuchMethod(
        Invocation.method(
          #createDefaultPrayerNotiSettings,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [UserSettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSettingsService extends _i1.Mock
    implements _i12.UserSettingsService {
  @override
  set userSettings(_i3.UserSettings? _userSettings) => super.noSuchMethod(
        Invocation.setter(
          #userSettings,
          _userSettings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isZoomInfoShown => (super.noSuchMethod(
        Invocation.getter(#isZoomInfoShown),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isZoomInfoShown(bool? _isZoomInfoShown) => super.noSuchMethod(
        Invocation.setter(
          #isZoomInfoShown,
          _isZoomInfoShown,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i3.UserSettings?> getUserSettings() => (super.noSuchMethod(
        Invocation.method(
          #getUserSettings,
          [],
        ),
        returnValue: _i9.Future<_i3.UserSettings?>.value(),
        returnValueForMissingStub: _i9.Future<_i3.UserSettings?>.value(),
      ) as _i9.Future<_i3.UserSettings?>);

  @override
  _i9.Future<void> setUserLocationSettings({
    required _i13.UserLocation? location,
    _i14.Country? country,
    _i15.City? city,
    _i16.StateModel? state,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserLocationSettings,
          [],
          {
            #location: location,
            #country: country,
            #city: city,
            #state: state,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.UserSettings> setSilentMode(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSilentMode,
          [value],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setSilentMode,
            [value],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setSilentMode,
            [value],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  _i9.Future<_i3.UserSettings> setAlarmMode(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setAlarmMode,
          [value],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setAlarmMode,
            [value],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setAlarmMode,
            [value],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  _i9.Future<_i3.UserSettings> setQuranReciter(int? id) => (super.noSuchMethod(
        Invocation.method(
          #setQuranReciter,
          [id],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setQuranReciter,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setQuranReciter,
            [id],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  _i9.Future<void> setPrayerNotiSettings({
    required _i3.PrayerNotiSettings? prayerNotiSettings,
    bool? updateAll = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPrayerNotiSettings,
          [],
          {
            #prayerNotiSettings: prayerNotiSettings,
            #updateAll: updateAll,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.PrayerNotiSettings> getPrayerNotiSettings(
          {required _i3.PrayerType? prayerType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrayerNotiSettings,
          [],
          {#prayerType: prayerType},
        ),
        returnValue:
            _i9.Future<_i3.PrayerNotiSettings>.value(_FakePrayerNotiSettings_2(
          this,
          Invocation.method(
            #getPrayerNotiSettings,
            [],
            {#prayerType: prayerType},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.PrayerNotiSettings>.value(_FakePrayerNotiSettings_2(
          this,
          Invocation.method(
            #getPrayerNotiSettings,
            [],
            {#prayerType: prayerType},
          ),
        )),
      ) as _i9.Future<_i3.PrayerNotiSettings>);

  @override
  _i9.Future<List<_i3.PrayerNotiSettings>> getAllPrayerNotiSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPrayerNotiSettings,
          [],
        ),
        returnValue: _i9.Future<List<_i3.PrayerNotiSettings>>.value(
            <_i3.PrayerNotiSettings>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i3.PrayerNotiSettings>>.value(
                <_i3.PrayerNotiSettings>[]),
      ) as _i9.Future<List<_i3.PrayerNotiSettings>>);

  @override
  _i9.Future<_i3.UserSettings> setSuraSettings(_i3.SuraSetting? suraSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSuraSettings,
          [suraSettings],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setSuraSettings,
            [suraSettings],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setSuraSettings,
            [suraSettings],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  _i9.Future<_i3.UserSettings> setIncreaseFontSizeForAyah(int? size) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIncreaseFontSizeForAyah,
          [size],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setIncreaseFontSizeForAyah,
            [size],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setIncreaseFontSizeForAyah,
            [size],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  _i9.Future<_i4.RosarySetting> getRosarySetting() => (super.noSuchMethod(
        Invocation.method(
          #getRosarySetting,
          [],
        ),
        returnValue: _i9.Future<_i4.RosarySetting>.value(_FakeRosarySetting_3(
          this,
          Invocation.method(
            #getRosarySetting,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i4.RosarySetting>.value(_FakeRosarySetting_3(
          this,
          Invocation.method(
            #getRosarySetting,
            [],
          ),
        )),
      ) as _i9.Future<_i4.RosarySetting>);

  @override
  _i9.Future<_i4.RosarySetting> setRosarySetting(
          _i4.RosarySetting? rosarySetting) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRosarySetting,
          [rosarySetting],
        ),
        returnValue: _i9.Future<_i4.RosarySetting>.value(_FakeRosarySetting_3(
          this,
          Invocation.method(
            #setRosarySetting,
            [rosarySetting],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i4.RosarySetting>.value(_FakeRosarySetting_3(
          this,
          Invocation.method(
            #setRosarySetting,
            [rosarySetting],
          ),
        )),
      ) as _i9.Future<_i4.RosarySetting>);

  @override
  _i9.Future<_i3.UserSettings> setUserAuthInformation(_i3.UserAuth? userAuth) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserAuthInformation,
          [userAuth],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setUserAuthInformation,
            [userAuth],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setUserAuthInformation,
            [userAuth],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  _i9.Future<_i3.UserSettings> setLastReadAyah(
          _i3.SavedLastAyah? lastReadAyah) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLastReadAyah,
          [lastReadAyah],
        ),
        returnValue: _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setLastReadAyah,
            [lastReadAyah],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.UserSettings>.value(_FakeUserSettings_1(
          this,
          Invocation.method(
            #setLastReadAyah,
            [lastReadAyah],
          ),
        )),
      ) as _i9.Future<_i3.UserSettings>);

  @override
  void setPrayerNotiSettingsForBackgroundTask(
          List<_i3.PrayerNotiSettings>? settingsList) =>
      super.noSuchMethod(
        Invocation.method(
          #setPrayerNotiSettingsForBackgroundTask,
          [settingsList],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioService extends _i1.Mock implements _i17.DioService {
  @override
  _i9.Future<_i18.Response<dynamic>?> request(
    dynamic url, {
    _i17.DioMethod? method = _i17.DioMethod.get,
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #method: method,
            #data: data,
          },
        ),
        returnValue: _i9.Future<_i18.Response<dynamic>?>.value(),
        returnValueForMissingStub: _i9.Future<_i18.Response<dynamic>?>.value(),
      ) as _i9.Future<_i18.Response<dynamic>?>);
}

/// A class which mocks [FetchTimesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchTimesService extends _i1.Mock implements _i19.FetchTimesService {
  @override
  _i9.Future<
      _i20.Either<_i21.PrayerTimes, _i19.FetchTimesException>> fetchTimes(
          {_i13.UserLocation? userLocation}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTimes,
          [],
          {#userLocation: userLocation},
        ),
        returnValue: _i9.Future<
                _i20.Either<_i21.PrayerTimes, _i19.FetchTimesException>>.value(
            _i7.dummyValue<
                _i20.Either<_i21.PrayerTimes, _i19.FetchTimesException>>(
          this,
          Invocation.method(
            #fetchTimes,
            [],
            {#userLocation: userLocation},
          ),
        )),
        returnValueForMissingStub: _i9.Future<
                _i20.Either<_i21.PrayerTimes, _i19.FetchTimesException>>.value(
            _i7.dummyValue<
                _i20.Either<_i21.PrayerTimes, _i19.FetchTimesException>>(
          this,
          Invocation.method(
            #fetchTimes,
            [],
            {#userLocation: userLocation},
          ),
        )),
      ) as _i9.Future<_i20.Either<_i21.PrayerTimes, _i19.FetchTimesException>>);

  @override
  _i9.Future<_i21.PrayerTimes?> updateAndGetTimes() => (super.noSuchMethod(
        Invocation.method(
          #updateAndGetTimes,
          [],
        ),
        returnValue: _i9.Future<_i21.PrayerTimes?>.value(),
        returnValueForMissingStub: _i9.Future<_i21.PrayerTimes?>.value(),
      ) as _i9.Future<_i21.PrayerTimes?>);

  @override
  _i9.Future<List<_i14.Country>> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue: _i9.Future<List<_i14.Country>>.value(<_i14.Country>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i14.Country>>.value(<_i14.Country>[]),
      ) as _i9.Future<List<_i14.Country>>);

  @override
  _i9.Future<List<_i15.City>> getCities(String? countryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCities,
          [countryId],
        ),
        returnValue: _i9.Future<List<_i15.City>>.value(<_i15.City>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i15.City>>.value(<_i15.City>[]),
      ) as _i9.Future<List<_i15.City>>);

  @override
  _i9.Future<List<_i16.StateModel>> getStates(String? cityId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStates,
          [cityId],
        ),
        returnValue:
            _i9.Future<List<_i16.StateModel>>.value(<_i16.StateModel>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i16.StateModel>>.value(<_i16.StateModel>[]),
      ) as _i9.Future<List<_i16.StateModel>>);

  @override
  _i9.Future<List<_i22.ReligiousDays>> getReligiousDays() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReligiousDays,
          [],
        ),
        returnValue:
            _i9.Future<List<_i22.ReligiousDays>>.value(<_i22.ReligiousDays>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i22.ReligiousDays>>.value(<_i22.ReligiousDays>[]),
      ) as _i9.Future<List<_i22.ReligiousDays>>);
}

/// A class which mocks [PrayerTimesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrayerTimesService extends _i1.Mock
    implements _i23.PrayerTimesService {
  @override
  set prayerTimes(_i21.PrayerTimes? _prayerTimes) => super.noSuchMethod(
        Invocation.setter(
          #prayerTimes,
          _prayerTimes,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool checkIsTimesUpToDate(_i21.PrayerTimes? prayerTimes) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIsTimesUpToDate,
          [prayerTimes],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Future<bool> hasPrayerTimes() => (super.noSuchMethod(
        Invocation.method(
          #hasPrayerTimes,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i20.Either<_i21.PrayerTimes, bool>> getPrayerTimes() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrayerTimes,
          [],
        ),
        returnValue: _i9.Future<_i20.Either<_i21.PrayerTimes, bool>>.value(
            _i7.dummyValue<_i20.Either<_i21.PrayerTimes, bool>>(
          this,
          Invocation.method(
            #getPrayerTimes,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i20.Either<_i21.PrayerTimes, bool>>.value(
                _i7.dummyValue<_i20.Either<_i21.PrayerTimes, bool>>(
          this,
          Invocation.method(
            #getPrayerTimes,
            [],
          ),
        )),
      ) as _i9.Future<_i20.Either<_i21.PrayerTimes, bool>>);

  @override
  _i9.Future<_i24.PrayerTime?> getPrayerTimesByDay(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrayerTimesByDay,
          [date],
        ),
        returnValue: _i9.Future<_i24.PrayerTime?>.value(),
        returnValueForMissingStub: _i9.Future<_i24.PrayerTime?>.value(),
      ) as _i9.Future<_i24.PrayerTime?>);

  @override
  _i9.Future<void> setPrayerTimes(_i21.PrayerTimes? prayerTimes) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPrayerTimes,
          [prayerTimes],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [QuranService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuranService extends _i1.Mock implements _i25.QuranService {
  @override
  _i9.Future<_i20.Either<List<_i26.SuraInfo>, _i25.QuranException>>
      getSuraList() => (super.noSuchMethod(
            Invocation.method(
              #getSuraList,
              [],
            ),
            returnValue: _i9.Future<
                    _i20
                    .Either<List<_i26.SuraInfo>, _i25.QuranException>>.value(
                _i7.dummyValue<
                    _i20.Either<List<_i26.SuraInfo>, _i25.QuranException>>(
              this,
              Invocation.method(
                #getSuraList,
                [],
              ),
            )),
            returnValueForMissingStub: _i9.Future<
                    _i20
                    .Either<List<_i26.SuraInfo>, _i25.QuranException>>.value(
                _i7.dummyValue<
                    _i20.Either<List<_i26.SuraInfo>, _i25.QuranException>>(
              this,
              Invocation.method(
                #getSuraList,
                [],
              ),
            )),
          ) as _i9
              .Future<_i20.Either<List<_i26.SuraInfo>, _i25.QuranException>>);

  @override
  _i9.Future<_i20.Either<_i27.AyahList, _i25.QuranException>> getSuraAyahList({
    required int? suraId,
    int? ayah,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuraAyahList,
          [],
          {
            #suraId: suraId,
            #ayah: ayah,
            #offset: offset,
          },
        ),
        returnValue:
            _i9.Future<_i20.Either<_i27.AyahList, _i25.QuranException>>.value(
                _i7.dummyValue<_i20.Either<_i27.AyahList, _i25.QuranException>>(
          this,
          Invocation.method(
            #getSuraAyahList,
            [],
            {
              #suraId: suraId,
              #ayah: ayah,
              #offset: offset,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i20.Either<_i27.AyahList, _i25.QuranException>>.value(
                _i7.dummyValue<_i20.Either<_i27.AyahList, _i25.QuranException>>(
          this,
          Invocation.method(
            #getSuraAyahList,
            [],
            {
              #suraId: suraId,
              #ayah: ayah,
              #offset: offset,
            },
          ),
        )),
      ) as _i9.Future<_i20.Either<_i27.AyahList, _i25.QuranException>>);

  @override
  _i9.Future<_i20.Either<List<_i28.QuranReciter>, _i25.QuranException>>
      getQuranReciters() => (super.noSuchMethod(
            Invocation.method(
              #getQuranReciters,
              [],
            ),
            returnValue: _i9.Future<
                _i20.Either<List<_i28.QuranReciter>,
                    _i25.QuranException>>.value(_i7.dummyValue<
                _i20.Either<List<_i28.QuranReciter>, _i25.QuranException>>(
              this,
              Invocation.method(
                #getQuranReciters,
                [],
              ),
            )),
            returnValueForMissingStub: _i9.Future<
                _i20.Either<List<_i28.QuranReciter>,
                    _i25.QuranException>>.value(_i7.dummyValue<
                _i20.Either<List<_i28.QuranReciter>, _i25.QuranException>>(
              this,
              Invocation.method(
                #getQuranReciters,
                [],
              ),
            )),
          ) as _i9.Future<
              _i20.Either<List<_i28.QuranReciter>, _i25.QuranException>>);

  @override
  _i9.Future<_i20.Either<_i29.SuraAudio, _i25.QuranException>> getSuraAudio(
          _i28.QuranReciter? reciter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuraAudio,
          [reciter],
        ),
        returnValue: _i9
            .Future<_i20.Either<_i29.SuraAudio, _i25.QuranException>>.value(
            _i7.dummyValue<_i20.Either<_i29.SuraAudio, _i25.QuranException>>(
          this,
          Invocation.method(
            #getSuraAudio,
            [reciter],
          ),
        )),
        returnValueForMissingStub: _i9
            .Future<_i20.Either<_i29.SuraAudio, _i25.QuranException>>.value(
            _i7.dummyValue<_i20.Either<_i29.SuraAudio, _i25.QuranException>>(
          this,
          Invocation.method(
            #getSuraAudio,
            [reciter],
          ),
        )),
      ) as _i9.Future<_i20.Either<_i29.SuraAudio, _i25.QuranException>>);

  @override
  _i9.Future<_i20.Either<_i30.SuraPlayer, _i25.QuranException>> getSuraPlayer(
          String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuraPlayer,
          [url],
        ),
        returnValue: _i9
            .Future<_i20.Either<_i30.SuraPlayer, _i25.QuranException>>.value(
            _i7.dummyValue<_i20.Either<_i30.SuraPlayer, _i25.QuranException>>(
          this,
          Invocation.method(
            #getSuraPlayer,
            [url],
          ),
        )),
        returnValueForMissingStub: _i9
            .Future<_i20.Either<_i30.SuraPlayer, _i25.QuranException>>.value(
            _i7.dummyValue<_i20.Either<_i30.SuraPlayer, _i25.QuranException>>(
          this,
          Invocation.method(
            #getSuraPlayer,
            [url],
          ),
        )),
      ) as _i9.Future<_i20.Either<_i30.SuraPlayer, _i25.QuranException>>);
}

/// A class which mocks [FavouritesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavouritesService extends _i1.Mock implements _i31.FavouritesService {
  @override
  _i9.Future<void> addFavourite(_i32.Favourite? favourite) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavourite,
          [favourite],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> deleteFavourite({
    required int? id,
    required String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFavourite,
          [],
          {
            #id: id,
            #name: name,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> deleteFolder(String? folder) => (super.noSuchMethod(
        Invocation.method(
          #deleteFolder,
          [folder],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<_i32.Favourite>> getFavourites({String? folder}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavourites,
          [],
          {#folder: folder},
        ),
        returnValue: _i9.Future<List<_i32.Favourite>>.value(<_i32.Favourite>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i32.Favourite>>.value(<_i32.Favourite>[]),
      ) as _i9.Future<List<_i32.Favourite>>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i33.AuthService {
  @override
  _i9.Future<_i20.Either<_i3.UserSettings, _i33.AuthException>> auth({
    required _i3.UserAuth? userAuth,
    required bool? isLogin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #auth,
          [],
          {
            #userAuth: userAuth,
            #isLogin: isLogin,
          },
        ),
        returnValue: _i9
            .Future<_i20.Either<_i3.UserSettings, _i33.AuthException>>.value(
            _i7.dummyValue<_i20.Either<_i3.UserSettings, _i33.AuthException>>(
          this,
          Invocation.method(
            #auth,
            [],
            {
              #userAuth: userAuth,
              #isLogin: isLogin,
            },
          ),
        )),
        returnValueForMissingStub: _i9
            .Future<_i20.Either<_i3.UserSettings, _i33.AuthException>>.value(
            _i7.dummyValue<_i20.Either<_i3.UserSettings, _i33.AuthException>>(
          this,
          Invocation.method(
            #auth,
            [],
            {
              #userAuth: userAuth,
              #isLogin: isLogin,
            },
          ),
        )),
      ) as _i9.Future<_i20.Either<_i3.UserSettings, _i33.AuthException>>);
}

/// A class which mocks [KazaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockKazaService extends _i1.Mock implements _i34.KazaService {
  @override
  _i9.Future<_i35.Kaza?> getUserKaza(_i3.UserAuth? userAuth) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserKaza,
          [userAuth],
        ),
        returnValue: _i9.Future<_i35.Kaza?>.value(),
        returnValueForMissingStub: _i9.Future<_i35.Kaza?>.value(),
      ) as _i9.Future<_i35.Kaza?>);

  @override
  _i9.Future<bool> setUserKaza({
    required _i3.UserAuth? userAuth,
    required _i35.Kaza? kaza,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserKaza,
          [],
          {
            #userAuth: userAuth,
            #kaza: kaza,
          },
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [InAppPurchaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockInAppPurchaseService extends _i1.Mock
    implements _i36.InAppPurchaseService {
  @override
  List<_i37.EntitlementInfo> get entitlements => (super.noSuchMethod(
        Invocation.getter(#entitlements),
        returnValue: <_i37.EntitlementInfo>[],
        returnValueForMissingStub: <_i37.EntitlementInfo>[],
      ) as List<_i37.EntitlementInfo>);

  @override
  List<_i37.Offering> get offers => (super.noSuchMethod(
        Invocation.getter(#offers),
        returnValue: <_i37.Offering>[],
        returnValueForMissingStub: <_i37.Offering>[],
      ) as List<_i37.Offering>);

  @override
  bool get hasSubscription => (super.noSuchMethod(
        Invocation.getter(#hasSubscription),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void listen() => super.noSuchMethod(
        Invocation.method(
          #listen,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> init({_i10.VoidCallback? onInit}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#onInit: onInit},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updatePurchaseStatus(_i37.CustomerInfo? customerInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePurchaseStatus,
          [customerInfo],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> fetchOffers() => (super.noSuchMethod(
        Invocation.method(
          #fetchOffers,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> purchasePackage(_i37.Package? package) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchasePackage,
          [package],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<bool> restoreTransactions() => (super.noSuchMethod(
        Invocation.method(
          #restoreTransactions,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StoryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoryService extends _i1.Mock implements _i38.StoryService {
  @override
  _i9.Future<_i5.StoriesModel?> getStories() => (super.noSuchMethod(
        Invocation.method(
          #getStories,
          [],
        ),
        returnValue: _i9.Future<_i5.StoriesModel?>.value(),
        returnValueForMissingStub: _i9.Future<_i5.StoriesModel?>.value(),
      ) as _i9.Future<_i5.StoriesModel?>);

  @override
  _i9.Future<_i5.Stories> filterStories(int? type) => (super.noSuchMethod(
        Invocation.method(
          #filterStories,
          [type],
        ),
        returnValue: _i9.Future<_i5.Stories>.value(_FakeStories_4(
          this,
          Invocation.method(
            #filterStories,
            [type],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i5.Stories>.value(_FakeStories_4(
          this,
          Invocation.method(
            #filterStories,
            [type],
          ),
        )),
      ) as _i9.Future<_i5.Stories>);
}
